// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Test LambdaAstroSite > Expect match snapshot 1`] = `
{
  "Outputs": {
    "TestConstructAPIEndpoint8D83142B": {
      "Value": {
        "Fn::GetAtt": [
          "TestConstructHttpApiDD05EA19",
          "ApiEndpoint",
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "TestConstructHandlerFFEC74AC": {
      "DependsOn": [
        "TestConstructHandlerServiceRoleC1B4872E",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "b4349d2e7ca08ef1b005e6e30b06256ff57aeab10edeb70ad5b5be5cf9ad45d1.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "TestConstructHandlerServiceRoleC1B4872E",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "TestConstructHandlerServiceRoleC1B4872E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TestConstructHttpApiANY7337DC9E": {
      "Properties": {
        "ApiId": {
          "Ref": "TestConstructHttpApiDD05EA19",
        },
        "AuthorizationType": "NONE",
        "RouteKey": "ANY /",
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "TestConstructHttpApiANYAstroIntegration557C532A",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "TestConstructHttpApiANYAstroIntegration557C532A": {
      "Properties": {
        "ApiId": {
          "Ref": "TestConstructHttpApiDD05EA19",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "TestConstructHandlerFFEC74AC",
            "Arn",
          ],
        },
        "PayloadFormatVersion": "2.0",
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "TestConstructHttpApiANYAstroIntegrationPermissionCF7F49A3": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "TestConstructHandlerFFEC74AC",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "TestConstructHttpApiDD05EA19",
              },
              "/*/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "TestConstructHttpApiDD05EA19": {
      "Properties": {
        "CorsConfiguration": {
          "AllowMethods": [
            "*",
          ],
          "AllowOrigins": [
            "*",
          ],
        },
        "Name": "HttpApi",
        "ProtocolType": "HTTP",
      },
      "Type": "AWS::ApiGatewayV2::Api",
    },
    "TestConstructHttpApiDefaultStage63A0347E": {
      "Properties": {
        "ApiId": {
          "Ref": "TestConstructHttpApiDD05EA19",
        },
        "AutoDeploy": true,
        "StageName": "$default",
      },
      "Type": "AWS::ApiGatewayV2::Stage",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
