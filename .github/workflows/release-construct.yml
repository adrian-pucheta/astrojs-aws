name: Release construct

on:
  push:
    tags: [ "v*" ]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup PNPM
      uses: pnpm/action-setup@v2
      with:
        version: "latest"

    - name: Setup Nodejs
      uses: actions/setup-node@v3
      with:
        cache: "pnpm"

    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17.x

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.x

    - name: Setup DotNet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.x

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Run build
      run: |-
        pnpm run build --filter construct
        pnpm run package --filter construct

    - name: Get tag
      id: tag
      uses: dawidd6/action-get-tag@v1
      with:
        strip_v: false

    - name: Publish to Github Releases
      run: npx gh-release --workpath packages/construct --name construct-${{ steps.tag.outputs.tag }} --yes
      env:
        GH_RELEASE_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Set publishing config
      run: pnpm config set '//registry.npmjs.org/:_authToken' "${NODE_AUTH_TOKEN}"
      env:
        NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

    - name: Publish to NPM
      run: pnpm run publish publib-npm
      env:
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Publish to Maven
      run: pnpm run publish publib-maven
      env:
        MAVEN_ENDPOINT: ${{ secrets.MAVEN_ENDPOINT }}
        MAVEN_GPG_PRIVATE_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
        MAVEN_GPG_PRIVATE_KEY_PASSPHRASE: ${{ secrets.MAVEN_GPG_PRIVATE_KEY_PASSPHRASE }}
        MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
        MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
        MAVEN_STAGING_PROFILE_ID: ${{ secrets.MAVEN_STAGING_PROFILE_ID }}

    - name: Publish to PyPI
      run: pnpm run publish publib-pypi
      env:
        TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}

    - name: Publish to NuGet Gallery
      run: pnpm run publish publib-nuget
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

    - name: Publish to Golang Repository
      run: pnpm run publish publib-golang
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
